// <auto-generated />
using System;
using DesafioBackend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DesafioBackend.Migrations
{
    [DbContext(typeof(MedicoContext))]
    [Migration("20200818142557_create-medico")]
    partial class createmedico
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DesafioBackend.Models.Especialidade", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Especialidade");
                });

            modelBuilder.Entity("DesafioBackend.Models.Medico", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("crm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("DesafioBackend.Models.MedicoEspecialidade", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("especialidadeid")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("medicoid")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.HasIndex("especialidadeid");

                    b.HasIndex("medicoid");

                    b.ToTable("MedicosEspecialidades");
                });

            modelBuilder.Entity("DesafioBackend.Models.MedicoEspecialidade", b =>
                {
                    b.HasOne("DesafioBackend.Models.Especialidade", "especialidade")
                        .WithMany()
                        .HasForeignKey("especialidadeid");

                    b.HasOne("DesafioBackend.Models.Medico", "medico")
                        .WithMany("especialidades")
                        .HasForeignKey("medicoid");
                });
#pragma warning restore 612, 618
        }
    }
}
