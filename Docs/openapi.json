{
  "openapi": "3.0.0",
  "info": {
    "title": "Medico Api",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/getRandomToken": {
      "get": {
        "operationId": "getRandomToken",
        "description": "Deve retornar um token de autenticação jwt em formato de texto, que deve ser usado para autenticar as outras rotas através do cabeçalho.",
        "summary": "Deve retornar um token de autenticação jwt em formato de texto, que deve ser usado para autenticar as outras rotas através do cabeçalho.",
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            }
          }
        }
      }
    },
    "/medico": {
      "get": {
        "operationId": "listMedicos",
        "description": "Retorna uma lista simplificada com todos os registros dos medicos cadastrados e suas especialidades.",
        "summary": "Listar todos os médicos.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Token de autenticação necessário para executar esta rota.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AuthToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Medicos"
                }
              }
            }
          },
          "401": {
            "description": "Se não houver token de autenticação, retornará 401 - Unnauthorized, sem corpo em sua resposta.",
            "headers": {
              "WWW-Authenticate": {
                "description": "Erro de autenticação",
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createMedico",
        "description": "Recebe no corpo da requisição os dados do medicos que se deseja criar o registro.",
        "summary": "Criar um novo médico",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Token de autenticação necessário para executar esta rota.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AuthToken"
            }
          }
        ],
        "requestBody": {
          "description": "Medico a ser adcionado com suas especialidades",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Medico"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da criação",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Medico"
                }
              }
            }
          },
          "401": {
            "description": "Se não houver token de autenticação, retornará 401 - Unnauthorized, sem corpo em sua resposta.",
            "headers": {
              "WWW-Authenticate": {
                "description": "Erro de autenticação",
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            }
          }
        }
      }
    },
    "/medico/{query}": {
      "get": {
        "operationId": "medicoByEspecialidade",
        "description": "Recebe o nome da especialidade e retorna todos os médicos que a possuirem.",
        "summary": "Listar todos os médicos que contenham a especialidade passada como parâmetro.",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "required": true,
            "description": "Nome da especialidade a buscar.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "description": "Token de autenticação necessário para executar esta rota.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AuthToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Medicos"
                }
              }
            }
          },
          "401": {
            "description": "Se não houver token de autenticação, retornará 401 - Unnauthorized, sem corpo em sua resposta.",
            "headers": {
              "WWW-Authenticate": {
                "description": "Erro de autenticação",
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteMedico",
        "description": "Recebe como parametro o id do registro que se deseja remover, e o remove.",
        "summary": "Remove um medico.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id do médico que deseja deletar em formato Guid.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "description": "Token de autenticação necessário para executar esta rota.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AuthToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Medicos"
                }
              }
            }
          },
          "401": {
            "description": "Se não houver token de autenticação, retornará 401 - Unnauthorized, sem corpo em sua resposta.",
            "headers": {
              "WWW-Authenticate": {
                "description": "Erro de autenticação",
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            }
          }
        }
      }
    }

  },
  "components": {
    "schemas": {
      "AuthToken": {
        "type": "string",
        "required": [ "token" ],
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "AuthorizationError": {
        "type": "string",
        "required": [ "error" ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "Especialidade": {
        "type": "object",
        "required": [ "name" ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Medico": {
        "type": "object",
        "required": [
          "id",
          "name",
          "cpf",
          "crm"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "crm": {
            "type": "string"
          },
          "especialidades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Especialidade"
            }
          }
        }
      },
      "Medicos": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Medico"
        }
      },
      "Erro": {
        "type": "object",
        "required": [ "campo", "erro" ],
        "properties": {
          "campo": {
            "type": "string"
          },
          "erro": {
            "type": "string"
          }
        }
      },
      "Erros": {
        "type": "object",
        "required": [
          "erros"
        ],
        "properties": {
          "erros": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Erro"
            }
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
